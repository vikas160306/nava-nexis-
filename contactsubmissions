import React, { useState, useEffect } from "react";
import { Contact } from "@/entities/Contact";
import { Card, CardHeader, CardTitle, CardContent, CardFooter } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Button } from "@/components/ui/button";
import { MoreHorizontal } from "lucide-react";
import moment from "moment";

export default function ContactSubmissions() {
  const [contacts, setContacts] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadContacts();
  }, []);

  const loadContacts = async () => {
    setLoading(true);
    try {
      const data = await Contact.list('-created_date');
      setContacts(data);
    } catch (error) {
      console.error("Failed to load contacts:", error);
    }
    setLoading(false);
  };

  const handleStatusChange = async (contactId, status) => {
    try {
      await Contact.update(contactId, { status });
      loadContacts();
    } catch (error) {
      console.error("Failed to update contact status:", error);
    }
  };

  const statusColors = {
    new: "bg-blue-100 text-blue-800",
    contacted: "bg-yellow-100 text-yellow-800",
    converted: "bg-green-100 text-green-800",
    closed: "bg-gray-100 text-gray-800",
  };

  if (loading) {
    return <div className="text-center p-8">Loading submissions...</div>;
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>Contact Form Submissions</CardTitle>
      </CardHeader>
      <CardContent>
        {contacts.length > 0 ? (
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Date</TableHead>
                <TableHead>Name</TableHead>
                <TableHead>Email & Phone</TableHead>
                <TableHead>Message</TableHead>
                <TableHead>Interest</TableHead>
                <TableHead>Status</TableHead>
                <TableHead className="text-right">Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {contacts.map((contact) => (
                <TableRow key={contact.id}>
                  <TableCell className="text-sm text-gray-500 whitespace-nowrap">{moment(contact.created_date).format("MMM D, YYYY")}</TableCell>
                  <TableCell className="font-medium">{contact.name}</TableCell>
                  <TableCell>
                    <div className="text-sm">{contact.email}</div>
                    <div className="text-xs text-gray-500">{contact.phone}</div>
                  </TableCell>
                  <TableCell className="max-w-xs truncate">
                    <span title={contact.message}>{contact.message}</span>
                  </TableCell>
                  <TableCell className="capitalize">{contact.service_interest?.replace("_", " ")}</TableCell>
                  <TableCell>
                    <Badge className={statusColors[contact.status]}>{contact.status}</Badge>
                  </TableCell>
                  <TableCell className="text-right">
                    <DropdownMenu>
                      <DropdownMenuTrigger asChild>
                        <Button variant="ghost" size="icon">
                          <MoreHorizontal className="w-4 h-4" />
                        </Button>
                      </DropdownMenuTrigger>
                      <DropdownMenuContent align="end">
                        <DropdownMenuItem onClick={() => handleStatusChange(contact.id, 'contacted')}>Mark as Contacted</DropdownMenuItem>
                        <DropdownMenuItem onClick={() => handleStatusChange(contact.id, 'converted')}>Mark as Converted</DropdownMenuItem>
                        <DropdownMenuItem onClick={() => handleStatusChange(contact.id, 'closed')}>Mark as Closed</DropdownMenuItem>
                      </DropdownMenuContent>
                    </DropdownMenu>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        ) : (
          <div className="text-center py-12 text-gray-500">
            No contact submissions yet.
          </div>
        )}
      </CardContent>
    </Card>
  );
}
